name: vulnerability scanning (reusable)
on:
  workflow_dispatch:
    inputs:
      image-ref:
        type: string
        required: true
        description: image ref to be scanned

jobs:
  scan:
    name: Scan image
    runs-on: ubuntu-20.04
    steps:
      - name: Run Trivy vulnerability scanner
        id: trivy-scan
        run: exit 1
        continue-on-error: true
      - name: Set scan results
        id: set-results
        run: |
          echo 'Vulnerabilities Detected'
          echo "${GITHUB_RUN_ID}"
          RESULT=$(cat <<EOS
          something found in scanning.

          critical,a
          high,b

          etc...
          EOS
          )
          RESULT="${RESULT//'%'/'%25'}"
          RESULT="${RESULT//$'\n'/'%0A'}"
          RESULT="${RESULT//$'\r'/'%0D'}"
          IMAGE_TAG=$(echo "${{ inputs.image-ref }}" | rev | cut -d"/" -f 1 - | rev)
          IMAGE=$(echo "$IMAGE_TAG" | cut -d: -f 1 -)
          echo "::set-output name=trivy-result::${RESULT}"
          echo "::set-output name=vulnerable::true"
          echo "::set-output name=image::${IMAGE}"
        if: ${{ steps.trivy-scan.outcome == 'failure' }}
      - name: Checkout repository
        uses: actions/checkout@v3
        if: ${{ steps.trivy-scan.outcome == 'failure' }}
      - name: Create an issue
        uses: JasonEtco/create-an-issue@v2
        id: create-issue
        with:
          filename: .github/issue_templates/os_vulnerability_report.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
          TRIVY_RESULT: ${{ steps.set-results.outputs.trivy-result }}
          IMAGE_REF: ${{ inputs.image-ref }}
          IMAGE_NAME: ${{ steps.set-results.outputs.image }}
        if: ${{ steps.trivy-scan.outcome == 'failure' }}
    outputs:
      vulnerable: ${{ steps.set-results.outputs.vulnerable }}
      image: ${{ steps.set-results.outputs.image }}
      issue-number: ${{ steps.create-issue.outputs.number }}
  
  rebuild:
    name: Rebuild vulnerable image
    needs: scan
    runs-on: ubuntu-20.04
    steps:
      - run: echo "${{ needs.scan.outputs.vulnerable }}"
    if: ${{ needs.scan.outputs.vulnerable == 'true' }}
  
  post-process:
    name: Post process
    needs: [scan, rebuild]
    runs-on: ubuntu-20.04
    steps:
      - uses: octokit/request-action@v2.x
        id: close-issue
        with:
          route: PATCH /repos/{repo}/issues/{issue-number}
          repo: ${{ github.repository }}
          issue-number: ${{ needs.scan.outputs.issue-number }}
          state: closed
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    if: ${{ needs.scan.outputs.vulnerable == 'true' }}
